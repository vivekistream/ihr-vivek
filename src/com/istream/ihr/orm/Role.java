package com.istream.ihr.orm;
// Generated 21-May-2016 13:20:47 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "role", catalog = "ihr")
public class Role implements java.io.Serializable {

	private Integer roleId;
	private String roleName;
	private Date creationTs;
	private Date lastUpdateTs;
	//private Set<UserAccount> userAccounts = new HashSet<UserAccount>(0);

	public Role() {
	}

	public Role(String roleName, Date creationTs, Date lastUpdateTs) {
		this.roleName = roleName;
		this.creationTs = creationTs;
		this.lastUpdateTs = lastUpdateTs;
	}

	/*public Role(String roleName, Date creationTs, Date lastUpdateTs, Set<UserAccount> userAccounts) {
		this.roleName = roleName;
		this.creationTs = creationTs;
		this.lastUpdateTs = lastUpdateTs;
		//this.userAccounts = userAccounts;
	}*/

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "role_id", unique = true, nullable = false)
	public Integer getRoleId() {
		return this.roleId;
	}

	public void setRoleId(Integer roleId) {
		this.roleId = roleId;
	}

	@Column(name = "Role_name", nullable = false, length = 100)
	public String getRoleName() {
		return this.roleName;
	}

	public void setRoleName(String roleName) {
		this.roleName = roleName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Creation_ts", nullable = false, length = 0)
	public Date getCreationTs() {
		return this.creationTs;
	}

	public void setCreationTs(Date creationTs) {
		this.creationTs = creationTs;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Last_update_ts", nullable = false, length = 0)
	public Date getLastUpdateTs() {
		return this.lastUpdateTs;
	}

	public void setLastUpdateTs(Date lastUpdateTs) {
		this.lastUpdateTs = lastUpdateTs;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public Set<UserAccount> getUserAccounts() {
		return this.userAccounts;
	}

	public void setUserAccounts(Set<UserAccount> userAccounts) {
		this.userAccounts = userAccounts;
	}*/
	
	public String toString() {
		return ToStringBuilder.reflectionToString(this, ToStringStyle.MULTI_LINE_STYLE);
	}

}
